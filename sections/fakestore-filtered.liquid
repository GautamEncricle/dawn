<div id="fake-store">
  <h2>Fake store filtered version</h2>

  <label for="category">Filter by Category:</label>
  <select id="category">
    <option value="all">All</option>
    <option value="electronics">Electronics</option>
    <option value="jewelery">Jewelery</option>
    <option value="men's clothing">Men's Clothing</option>
    <option value="women's clothing">Women's Clothing</option>
  </select>
  <div id="products-list" class="product-list"></div>
</div>

<script>
  const productContainer = document.getElementById('products-list');
  const categoryDropDown = document.getElementById('category');

  // Fetch the data
  async function fetchData(category = "all") {
    let url = "https://fakestoreapi.com/products";
    if (category !== "all") {
      url = `https://fakestoreapi.com/products/category/${encodeURIComponent(category)}`;
    }

    try {
      const res = await fetch(url);
      if (!res.ok) throw new Error('Failed to fetch the data');
      const data = await res.json();
      return data;
    } catch (error) {
      console.error('Something went wrong with server');
      return [];
    }
  }

  // Load the data
  async function loadProducts(category = 'all') {
    const products = await fetchData(category);
    productContainer.innerHTML = "";

    products.forEach((product) => {
      const card = document.createElement('div');
      card.className = 'product-card';

      card.innerHTML = `
        <img src="${product.image}" alt="${product.title}" />
        <h3>${product.title}</h3>
        <p>$${product.price}</p>
        <button onclick="alert('Added to cart: ${product.title}')">Add to Cart</button>
      `;
      productContainer.appendChild(card);
    });
  }

  // Call the load function
  loadProducts();

  // Category change event handler
  categoryDropDown.addEventListener("change", () => {
    loadProducts(categoryDropDown.value);
  });
</script>

<style>
  #fake-store {
    padding: 20px;
    font-family: Arial, sans-serif;
    background-color: #f9f9f9;
  }

  .product-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }

  .product-card {
    background-color: #ffffff;
    border: 1px solid #ddd;
    border-radius: 8px;
    padding: 15px;
    text-align: center;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.03);
  }

  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  }

  .product-card img {
    height: 150px;
    width: 100%;
    object-fit: contain;
    margin-bottom: 10px;
    border-radius: 4px;
  }

  .product-card h3 {
    font-size: 16px;
    margin: 10px 0;
    color: #333;
  }

  .product-card p {
    font-weight: bold;
    color: #222;
    margin-bottom: 10px;
  }

  .product-card button {
    background-color: #000;
    color: #fff;
    padding: 8px 14px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
    transition: background-color 0.2s ease;
  }

  .product-card button:hover {
    background-color: #333;
  }
</style>

{% schema %}
{
  "name": "Fakestore-filtered",
  "settings": [],
  "presets": [
    {
      "name": "Fakestore-filtered-version"
    }
  ]
}
{% endschema %}
